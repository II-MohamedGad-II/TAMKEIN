"""
Django settings for courses_website project.

Generated by 'django-admin startproject' using Django 5.1.2.
"""

from pathlib import Path
import os
import dj_database_url


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Custom user model
AUTH_USER_MODEL = 'users.CustomUser'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = 'django-insecure-nny1rv%&ba0-+mqk$_v4(7yjp=6o%jv8_cn+m$8%c7ln8$x@fm'
#SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = os.environ.get("DEBUG","False").lower() == "True"
DEBUG = True
import os

#ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "").split()
ALLOWED_HOSTS = ['localhost', '127.0.0.1']



# Application definition
INSTALLED_APPS = [
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt.token_blacklist',
    'courses',
    'home',
    'users',
    'roadmap',
    'questionnaire',
    'recommendations',
     'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'TTS',
    'chatbot',
    'QG',
    
]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PAGINATION_CLASS': None,  # 🚀 تعطيل الترقيم لعرض كل البيانات دفعة واحدة
}


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Add this line
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'courses_website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',  # مسار ملفات HTML
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'courses_website.wsgi.application'

# Database
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',
#         'USER': 'postgres',
#         'PASSWORD': '123',
#         'HOST': 'localhost',
#         'PORT': '5432',
#     }
# }
import os
import dj_database_url

DATABASES = {
    'default': dj_database_url.config(
        default="postgresql://postgres:xSkhOQCGELvkHZOIAhTubFKBxbfpsssg@tramway.proxy.rlwy.net:25665/railway",
        conn_max_age=600,
        ssl_require=True  
    )
}

import dj_database_url
import os

# DATABASE_URL = os.environ.get("DATABASE_URL")
# if DATABASE_URL:
#     DATABASES['default'] = dj_database_url.parse(DATABASE_URL)
# else:
#     raise ValueError("DATABASE_URL is not set in the environment variables")

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATICFILES_DIRS = [
    BASE_DIR / "static",  # تحديد المسار لمجلد static
    
]
STATIC_URL = '/static/'  # المسار الذي سيعرضه Django للملفات الثابتة
STATIC_ROOT = BASE_DIR / "staticfiles"  # المسار الذي سيتم جمع الملفات فيه بعد تنفيذ collectstatic


MIDDLEWARE = ['corsheaders.middleware.CorsMiddleware'] + MIDDLEWARE
CORS_ALLOW_ALL_ORIGINS = True


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # لتجميع الملفات عند استخدام collectstatic

# Media files (Uploaded by users)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Login configuration
LOGIN_URL = '/users/login/'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
CSRF_COOKIE_SECURE = True  # Set to True only if using HTTPS
CORS_ALLOW_ALL_ORIGINS = True  # (للسماح بكل المواقع، لكن هذا غير آمن للإنتاج)
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # عدليها حسب عنوان الفرونت إند
]
ALLOWED_HOSTS = ['.ngrok-free.app', '127.0.0.1', 'localhost']
CSRF_TRUSTED_ORIGINS = [
    'https://*.ngrok-free.app'
]
